// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adder.proto

#ifndef PROTOBUF_adder_2eproto__INCLUDED
#define PROTOBUF_adder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace adder {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_adder_2eproto();
void protobuf_AssignDesc_adder_2eproto();
void protobuf_ShutdownFile_adder_2eproto();

class AdderReply;
class AdderRequest;

// ===================================================================

class AdderRequest : public ::google::protobuf::Message {
 public:
  AdderRequest();
  virtual ~AdderRequest();

  AdderRequest(const AdderRequest& from);

  inline AdderRequest& operator=(const AdderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdderRequest& default_instance();

  void Swap(AdderRequest* other);

  // implements Message ----------------------------------------------

  inline AdderRequest* New() const { return New(NULL); }

  AdderRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdderRequest& from);
  void MergeFrom(const AdderRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // optional int32 b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:adder.AdderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adder_2eproto();
  friend void protobuf_AssignDesc_adder_2eproto();
  friend void protobuf_ShutdownFile_adder_2eproto();

  void InitAsDefaultInstance();
  static AdderRequest* default_instance_;
};
// -------------------------------------------------------------------

class AdderReply : public ::google::protobuf::Message {
 public:
  AdderReply();
  virtual ~AdderReply();

  AdderReply(const AdderReply& from);

  inline AdderReply& operator=(const AdderReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdderReply& default_instance();

  void Swap(AdderReply* other);

  // implements Message ----------------------------------------------

  inline AdderReply* New() const { return New(NULL); }

  AdderReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdderReply& from);
  void MergeFrom(const AdderReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdderReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sum = 1;
  void clear_sum();
  static const int kSumFieldNumber = 1;
  ::google::protobuf::int32 sum() const;
  void set_sum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:adder.AdderReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 sum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adder_2eproto();
  friend void protobuf_AssignDesc_adder_2eproto();
  friend void protobuf_ShutdownFile_adder_2eproto();

  void InitAsDefaultInstance();
  static AdderReply* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AdderRequest

// optional int32 a = 1;
inline void AdderRequest::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 AdderRequest::a() const {
  // @@protoc_insertion_point(field_get:adder.AdderRequest.a)
  return a_;
}
inline void AdderRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:adder.AdderRequest.a)
}

// optional int32 b = 2;
inline void AdderRequest::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 AdderRequest::b() const {
  // @@protoc_insertion_point(field_get:adder.AdderRequest.b)
  return b_;
}
inline void AdderRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:adder.AdderRequest.b)
}

// -------------------------------------------------------------------

// AdderReply

// optional int32 sum = 1;
inline void AdderReply::clear_sum() {
  sum_ = 0;
}
inline ::google::protobuf::int32 AdderReply::sum() const {
  // @@protoc_insertion_point(field_get:adder.AdderReply.sum)
  return sum_;
}
inline void AdderReply::set_sum(::google::protobuf::int32 value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:adder.AdderReply.sum)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace adder

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_adder_2eproto__INCLUDED
